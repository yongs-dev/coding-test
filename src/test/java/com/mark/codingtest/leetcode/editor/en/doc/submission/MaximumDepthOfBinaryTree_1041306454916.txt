    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     *     int val;
     *     TreeNode left;
     *     TreeNode right;
     *     TreeNode() {}
     *     TreeNode(int val) { this.val = val; }
     *     TreeNode(int val, TreeNode left, TreeNode right) {
     *         this.val = val;
     *         this.left = left;
     *         this.right = right;
     *     }
     * }
     */
    class Solution {
        public int maxDepth(TreeNode root) {
            return 0;
        }

        public void dfs(TreeNode root) {
            if (root == null) return;
            log.info("{}", root.val);  // 현재 노드 방문
            dfs(root.left);            // 왼쪽 서브트리 방문
            dfs(root.right);           // 오른쪽 서브트리 방문
        }

        public void bfs(TreeNode root) {
            Deque<TreeNode> queue = new ArrayDeque<>();
            queue.add(root);

            while (!queue.isEmpty()) {
                TreeNode node = queue.poll();
                log.info("{}", node.val);
                if (node.left != null) {
                    queue.add(node.left);
                }
                if (node.right != null) {
                    queue.add(node.right);
                }
            }
        }
    }

//total_correct:
//compile_error:Line 23: error: cannot find symbol
            log.info("{}", root.val);  // 현재 노드 방문
            ^
  symbol:   variable log
  location: class Solution
Line 34: error: cannot find symbol
                log.info("{}", node.val);
                ^
  symbol:   variable log
  location: class Solution
2 errors
